// Generated by view binder compiler. Do not edit!
package com.example.todoapplicationmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.todoapplicationmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonAdd;

  @NonNull
  public final ImageButton buttonMic;

  @NonNull
  public final Button buttonSelectDueDate;

  @NonNull
  public final Button buttonUserGuide;

  @NonNull
  public final Button buttonViewDeleted;

  @NonNull
  public final EditText editTextTask;

  @NonNull
  public final RecyclerView recyclerViewTasks;

  @NonNull
  public final TextView textViewDueDate;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Button buttonAdd,
      @NonNull ImageButton buttonMic, @NonNull Button buttonSelectDueDate,
      @NonNull Button buttonUserGuide, @NonNull Button buttonViewDeleted,
      @NonNull EditText editTextTask, @NonNull RecyclerView recyclerViewTasks,
      @NonNull TextView textViewDueDate) {
    this.rootView = rootView;
    this.buttonAdd = buttonAdd;
    this.buttonMic = buttonMic;
    this.buttonSelectDueDate = buttonSelectDueDate;
    this.buttonUserGuide = buttonUserGuide;
    this.buttonViewDeleted = buttonViewDeleted;
    this.editTextTask = editTextTask;
    this.recyclerViewTasks = recyclerViewTasks;
    this.textViewDueDate = textViewDueDate;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAdd;
      Button buttonAdd = ViewBindings.findChildViewById(rootView, id);
      if (buttonAdd == null) {
        break missingId;
      }

      id = R.id.buttonMic;
      ImageButton buttonMic = ViewBindings.findChildViewById(rootView, id);
      if (buttonMic == null) {
        break missingId;
      }

      id = R.id.buttonSelectDueDate;
      Button buttonSelectDueDate = ViewBindings.findChildViewById(rootView, id);
      if (buttonSelectDueDate == null) {
        break missingId;
      }

      id = R.id.buttonUserGuide;
      Button buttonUserGuide = ViewBindings.findChildViewById(rootView, id);
      if (buttonUserGuide == null) {
        break missingId;
      }

      id = R.id.buttonViewDeleted;
      Button buttonViewDeleted = ViewBindings.findChildViewById(rootView, id);
      if (buttonViewDeleted == null) {
        break missingId;
      }

      id = R.id.editTextTask;
      EditText editTextTask = ViewBindings.findChildViewById(rootView, id);
      if (editTextTask == null) {
        break missingId;
      }

      id = R.id.recyclerViewTasks;
      RecyclerView recyclerViewTasks = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewTasks == null) {
        break missingId;
      }

      id = R.id.textViewDueDate;
      TextView textViewDueDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewDueDate == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, buttonAdd, buttonMic,
          buttonSelectDueDate, buttonUserGuide, buttonViewDeleted, editTextTask, recyclerViewTasks,
          textViewDueDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
